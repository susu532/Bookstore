<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8">
  <title>Mes Favoris</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <!-- CSP allowing Bootstrap, Bootstrap Icons, Google Fonts, and local assets -->
  <meta http-equiv="Content-Security-Policy" content="
    default-src 'self';
    style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net https://fonts.googleapis.com;
    font-src 'self' https://cdn.jsdelivr.net https://fonts.gstatic.com;
    script-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net;
    img-src 'self' data:;
    connect-src 'self';
  ">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
  <link rel="stylesheet" href="/css/style.css">
  <style>
    body { background: linear-gradient(135deg, #f8fafc 0%, #e0e7ff 100%); min-height: 100vh; }
    .wishlist-card { background: #fff; border-radius: 1.2rem; box-shadow: 0 4px 24px 0 rgba(60,72,88,0.08); padding: 2rem 2.5rem; margin-bottom: 2rem; border: none; }
    .book-cover { height: 180px; width: 130px; object-fit: cover; border-radius: 0.3rem; box-shadow: 0 2px 8px #0001; }
    .remove-btn { color: #b26a00; }
    .move-btn { color: #0d6efd; }
  </style>
</head>
<body>
  <%- include('partials/navbar', { user }) %>
  <div class="container py-4">
    <h2 class="mb-4"><i class="bi bi-heart-fill text-danger"></i> Mes Favoris</h2>
    <div id="wishlistAlert"></div>
    <div id="wishlistBooksContainer">
    <% if (wishlistBooks && wishlistBooks.length > 0) { %>
      <div class="row">
        <% wishlistBooks.forEach(function(book) { %>
          <div class="col-md-4 mb-4" data-book-id="<%= book._id %>">
            <div class="wishlist-card p-3">
              <div class="d-flex align-items-center">
                <img src="<%= book.image || '/images/books/default-cover.png' %>" alt="Couverture" class="book-cover me-3">
                <div>
                  <h5 class="mb-1"><%= book.title %></h5>
                  <p class="mb-1 text-muted"><%= book.author %></p>
                  <div class="d-flex align-items-center gap-2">
                    <button class="btn btn-primary btn-sm move-to-cart-btn d-flex align-items-center">
                      <i class="bi bi-cart-plus"></i> <span class="ms-2">Déplacer vers le panier</span>
                    </button>
                    <button class="btn btn-outline-danger btn-sm toggle-wishlist-btn d-flex align-items-center">
                      <i class="bi bi-heart-fill"></i> <span class="ms-2">Retirer</span>
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        <% }); %>
      </div>
    <% } else { %>
      <div class="alert alert-info">Aucun livre dans vos favoris pour le moment.</div>
    <% } %>
    </div>
  </div>
  <script src="/socket.io/socket.io.js"></script>
  <script>
    const userId = '<%= user ? user._id : "" %>';
    const wishlistCount = document.getElementById('wishlistCount');
    const wishlistAlert = document.getElementById('wishlistAlert');
    function showAlert(msg, type = 'success') {
      wishlistAlert.innerHTML = `<div class="alert alert-${type} alert-dismissible fade show" role="alert">${msg}<button type="button" class="btn-close" data-bs-dismiss="alert"></button></div>`;
    }

    document.addEventListener('DOMContentLoaded', function() {
      // AJAX remove from wishlist
      document.querySelectorAll('.toggle-wishlist-btn').forEach(btn => {
        btn.addEventListener('click', async function() {
          const card = this.closest('[data-book-id]');
          const bookId = card.getAttribute('data-book-id');
          this.disabled = true;
          const res = await fetch(`/api/wishlist/${bookId}`, { method: 'DELETE' });
          if (res.ok) {
            card.remove();
            showAlert('Livre retiré des favoris.','success');
            if (window.socket) window.socket.emit('wishlistUpdated', { userId });
            if (!document.querySelector('.col-md-4')) {
              document.getElementById('wishlistBooksContainer').innerHTML = '<div class="alert alert-info">Aucun livre dans vos favoris pour le moment.</div>';
            }
          } else {
            showAlert('Erreur lors du retrait.','danger');
          }
          this.disabled = false;
        });
      });
      // AJAX move to cart
      document.querySelectorAll('.move-to-cart-btn').forEach(btn => {
        btn.addEventListener('click', async function() {
          const card = this.closest('[data-book-id]');
          const bookId = card.getAttribute('data-book-id');
          this.disabled = true;
          const res = await fetch(`/api/wishlist/${bookId}/move-to-cart`, { method: 'POST' });
          if (res.ok) {
            card.remove();
            showAlert('Livre déplacé vers le panier.','success');
            if (window.socket) window.socket.emit('wishlistUpdated', { userId });
            if (!document.querySelector('.col-md-4')) {
              document.getElementById('wishlistBooksContainer').innerHTML = '<div class="alert alert-info">Aucun livre dans vos favoris pour le moment.</div>';
            }
          } else {
            showAlert('Erreur lors du déplacement.','danger');
          }
          this.disabled = false;
        });
      });

      // Real-time updates
      let socket;
      if (typeof io !== 'undefined' && userId) {
        socket = io({ transports: ['websocket', 'polling'] });
        window.socket = socket;
        socket.on('wishlistUpdate', function(data) {
          if (data && data.userId === userId) {
            location.reload();
          }
        });
        socket.on('wishlistUpdated', function(data) {
          if (wishlistCount && data && data.userId === userId) {
            wishlistCount.textContent = data.count || data.newCount;
          }
        });
      }
    });
  </script>
</body>
</html>
