<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8">
  <link rel="icon" href="/images/logo.png" />
  <title>Gestion Utilisateurs - Books garden</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="/css/style.css">
  <style>
    body {
      background: linear-gradient(135deg, #f8fafc 0%, #e0e7ff 100%);
      min-height: 100vh;
    }
    .card {
      border-radius: 1.25rem;
      box-shadow: 0 4px 24px rgba(80, 80, 180, 0.08);
      border: none;
    }
    .table thead {
      background: linear-gradient(90deg, #6366f1 0%, #06b6d4 100%);
      color: #fff;
    }
    .table-striped > tbody > tr:nth-of-type(odd) {
      background-color: #f1f5f9;
    }
    .btn-primary {
      background: linear-gradient(90deg, #6366f1 0%, #06b6d4 100%);
      border: none;
    }
    .btn-primary:hover {
      background: linear-gradient(90deg, #06b6d4 0%, #6366f1 100%);
    }
    .badge-admin {
      background: #6366f1;
    }
    .badge-user {
      background: #06b6d4;
    }
    .search-bar {
      max-width: 350px;
    }
    @media (max-width: 768px) {
      .table-responsive {
        font-size: 0.95rem;
      }
      .card {
        padding: 0.5rem;
      }
    }
  </style>
</head>
<body>
  <% if (user && user.role === 1) { %>
    <nav class="sidebar" style="min-height:100vh;background:linear-gradient(180deg,#6366f1 0%,#06b6d4 100%);color:#fff;padding:2rem 1rem;position:fixed;top:0;left:0;width:240px;z-index:100;box-shadow:2px 0 16px rgba(99,102,241,0.10);display:flex;flex-direction:column;gap:2rem;">
      <div class="sidebar-logo" style="font-size:1.5rem;font-weight:700;margin-bottom:2rem;text-align:center;letter-spacing:0.05em;">
        <img src="/images/logo.png" alt="Logo" style="height:40px;vertical-align:middle;"> <span>Admin</span>
      </div>
      <a href="/dashboard" class="nav-link" style="color:#fff;font-size:1.1rem;margin-bottom:1rem;border-radius:0.75rem;padding:0.7rem 1rem;display:flex;align-items:center;gap:0.7rem;"><i class="bi bi-speedometer2"></i> Tableau de bord</a>
      <a href="/books/manage" class="nav-link" style="color:#fff;font-size:1.1rem;margin-bottom:1rem;border-radius:0.75rem;padding:0.7rem 1rem;display:flex;align-items:center;gap:0.7rem;"><i class="bi bi-journal-text"></i> Gérer les livres</a>
      <a href="/admin/users" class="nav-link" style="color:#fff;font-size:1.1rem;margin-bottom:1rem;border-radius:0.75rem;padding:0.7rem 1rem;display:flex;align-items:center;gap:0.7rem;"><i class="bi bi-people"></i> Gérer les utilisateurs</a>
      <a href="/admin/orders" class="nav-link" style="color:#fff;font-size:1.1rem;margin-bottom:1rem;border-radius:0.75rem;padding:0.7rem 1rem;display:flex;align-items:center;gap:0.7rem;"><i class="bi bi-bag-check"></i> Gérer les commandes</a>
      <a href="/admin/emprunts" class="nav-link" style="color:#fff;font-size:1.1rem;margin-bottom:1rem;border-radius:0.75rem;padding:0.7rem 1rem;display:flex;align-items:center;gap:0.7rem;"><i class="bi bi-clock-history"></i> Gérer les emprunts</a>
      <a href="/admin/stock" class="nav-link" style="color:#fff;font-size:1.1rem;margin-bottom:1rem;border-radius:0.75rem;padding:0.7rem 1rem;display:flex;align-items:center;gap:0.7rem;"><i class="bi bi-box-seam"></i> Stock</a>
      <a href="/admin/reviews" class="nav-link"><i class="bi bi-chat-left-text"></i> Modération Avis <span id="pendingReviewsCount" class="badge bg-danger ms-1" style="display:none;">0</span></a>
      <a href="/logout" class="nav-link" style="color:#fff;font-size:1.1rem;margin-bottom:1rem;border-radius:0.75rem;padding:0.7rem 1rem;display:flex;align-items:center;gap:0.7rem;"><i class="bi bi-box-arrow-right"></i> Déconnexion</a>
    </nav>
    <div style="margin-left:260px;">
  <% } else { %>
    <div>
  <% } %>
  
  <div class="container py-5">
    <div class="row justify-content-center mb-4">
      <div class="col-lg-8">
        <div class="d-flex flex-column flex-md-row align-items-center justify-content-between mb-3">
          <h2 class="fw-bold text-primary mb-3 mb-md-0">
            <i class="bi bi-people-fill me-2"></i>Gestion des Utilisateurs
          </h2>
          <form class="d-flex search-bar" role="search" onsubmit="event.preventDefault(); filterUsers();">
            <input class="form-control me-2" type="search" placeholder="Rechercher..." aria-label="Search" id="userSearchInput">
            <button class="btn btn-outline-primary" type="button" onclick="filterUsers()">
              <i class="bi bi-search"></i>
            </button>
          </form>
        </div>
        <div class="card p-4">
          <div class="table-responsive">
            <table class="table table-striped align-middle mb-0">
              <thead>
                <tr>
                  <th>Nom</th>
                  <th>Email</th>
                  <th>Rôle</th>
                  <th>Actif</th>
                  <th>Action</th>
                </tr>
              </thead>
              <tbody id="usersTableBody">
                <!-- Les utilisateurs seront injectés dynamiquement par JS -->
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
  <footer class="bg-white border-top py-4 mt-auto">
    <div class="container text-center">
      <%- include('../partials/footer') %>
    </div>
  </footer>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.js"></script>
  <script src="/js/client.js"></script>
  <script src="/js/avatar-socket.js"></script>
  <script>
    // Rendu dynamique des utilisateurs
    function renderUsers(users) {
      const tbody = document.getElementById('usersTableBody');
      tbody.innerHTML = '';
      users.forEach(user => {
        if(user.role !== 1) {
          tbody.innerHTML += `
            <tr data-user-id="${user._id}">
              <td class="fw-semibold d-flex align-items-center">
                ${user.avatar ? `<img src="${user.avatar}" alt="Avatar" class="admin-user-avatar me-2" data-userid="${user._id}" style="width:36px;height:36px;border-radius:50%;object-fit:cover;">` : `<i class='bi bi-person-circle admin-user-avatar me-2' style='font-size:2rem;'></i>`}
                ${user.name}
              </td>
              <td>${user.email}</td>
              <td><span class="badge badge-user">Utilisateur</span></td>
              <td><span class="badge ${user.isActive ? 'bg-success' : 'bg-danger'}">${user.isActive ? 'Oui' : 'Non'}</span></td>
              <td><button class="btn btn-sm btn-danger shadow" onclick='deleteUser("${user._id}")'>Supprimer</button></td>
            </tr>
          `;
        }
      });
    }

    // Real-time avatar update for all users in the table
    if (typeof io !== 'undefined') {
      const socket = io();
      socket.on('avatarUpdated', function(data) {
        if (data && data.userId && data.avatar) {
          // Update avatar in users table
          document.querySelectorAll(`img.admin-user-avatar[data-userid='${data.userId}']`).forEach(img => {
            img.src = data.avatar + '?t=' + Date.now();
          });
        }
      });
    }

    // Charger tous les utilisateurs au chargement de la page
    async function loadAllUsers() {
      const res = await fetch('/api/admin/users');
      const users = await res.json();
      renderUsers(users);
    }
    document.addEventListener('DOMContentLoaded', loadAllUsers);

    // Recherche dynamique
    function filterUsers() {
      const input = document.getElementById('userSearchInput').value.toLowerCase();
      const rows = document.querySelectorAll('#usersTableBody tr');
      rows.forEach(row => {
        const text = row.textContent.toLowerCase();
        row.style.display = text.includes(input) ? '' : 'none';
      });
    }

    // Suppression utilisateur
    async function deleteUser(userId) {
      if (!confirm('Êtes-vous sûr de vouloir supprimer cet utilisateur ?')) return;
      try {
        const res = await fetch(`/api/admin/users/${userId}`, { method: 'DELETE' });
        const data = await res.json();
        if (res.ok) {
          // Recharger la liste après suppression
          await loadAllUsers();
        } else {
          alert(data.message || 'Erreur lors de la suppression');
        }
      } catch (err) {
        alert('Erreur réseau');
      }
    }
  </script>
</body>
</html>