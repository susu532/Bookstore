<%- include('../partials/navbar', { user }) %>
<div class="container">
  <h1>Gestion des Emprunts</h1>
  <div id="emprunt-stats" class="mb-6"></div>
  <div id="overdue-alerts" class="mb-6"></div>
  <table class="table table-hover align-middle">
    <thead>
      <tr>
        <th>Utilisateur</th>
        <th>Livre</th>
        <th>Date d'emprunt</th>
        <th>Date de retour</th>
        <th>Action</th>
      </tr>
    </thead>
    <tbody>
      <% emprunts.forEach(e => { %>
        <tr>
          <td><%= e.user.name %> (<%= e.user.email %>)</td>
          <td><%= e.book.title %></td>
          <td><%= e.dateEmprunt.toLocaleDateString() %></td>
          <td>
            <% if (e.dateRetour) { %>
              <span class="badge bg-success bg-opacity-25 text-success px-3 py-2 rounded-pill">
                <i class="bi bi-check-circle"></i> <%= e.dateRetour.toLocaleDateString() %>
              </span>
            <% } else { %>
              <span class="badge bg-warning bg-opacity-25 text-warning px-3 py-2 rounded-pill">
                <i class="bi bi-clock-history"></i> Non retourné
              </span>
            <% } %>
          </td>
          <td>
            <% if (!e.dateRetour) { %>
              <button class="btn btn-success btn-sm rounded-pill px-4 fw-bold"
                      onclick="retournerLivre('<%= e._id %>')">
                <i class="bi bi-arrow-return-left"></i> Retourner
              </button>
            <% } else { %>
              <span class="badge bg-gradient-to-r from-green-200 to-green-100 text-success px-3 py-2 rounded-pill">
                Retourné
              </span>
            <% } %>
          </td>
        </tr>
      <% }) %>
    </tbody>
  </table>
</div>
<script>
document.addEventListener('DOMContentLoaded', async () => {
  // Stats
  const statsRes = await fetch('/api/emprunts/stats');
  if (statsRes.ok) {
    const stats = await statsRes.json();
    document.getElementById('emprunt-stats').innerHTML = `
      <div class="card">
        <b>Total emprunts :</b> ${stats.total} &nbsp; | 
        <b>En cours :</b> ${stats.actifs} &nbsp; | 
        <b>Retournés :</b> ${stats.returned} <br>
        <b>Top livres :</b> ${stats.topBooks.map(b => `${b.title} (${b.count})`).join(', ')}
      </div>
    `;
  }
  // Overdue
  const overdueRes = await fetch('/api/emprunts/overdue');
  if (overdueRes.ok) {
    const data = await overdueRes.json();
    if (data.emprunts.length > 0) {
      document.getElementById('overdue-alerts').innerHTML = `
        <div class="card bg-red-100 text-red-800">
          <b>Emprunts en retard :</b>
          <ul>
            ${data.emprunts.map(e => `<li>${e.user.name} - ${e.book.title} (depuis le ${new Date(e.dateEmprunt).toLocaleDateString()})</li>`).join('')}
          </ul>
        </div>
      `;
    }
  }
});

// Permet à l'admin de retourner un livre pour un utilisateur
async function retournerLivre(empruntId) {
  const res = await fetch(`/api/emprunts/return/${empruntId}`, {
    method: 'PUT',
    headers: { 'Content-Type': 'application/json' }
  });
  const data = await res.json();
  if (res.ok) {
    alert('Livre retourné avec succès');
    window.location.reload();
  } else {
    alert(data.message || 'Erreur lors du retour');
  }
}
</script>
