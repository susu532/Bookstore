<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8">
  <link rel="icon" href="/images/logo.png" />
  <title>Gestion des Livres - Books garden</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <!-- Bootstrap 5.3 + Bootstrap Icons -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
  <link rel="stylesheet" href="/css/style.css">
  <style>
    /* Modern colorful enhancements */
    body {
      background: linear-gradient(135deg, #f8fafc 0%, #e0e7ff 100%);
      min-height: 100vh;
    }
    .card {
      border-radius: 1.25rem;
      box-shadow: 0 4px 24px rgba(0,0,0,0.07);
    }
    .form-label {
      font-weight: 500;
      color: #4f46e5;
    }
    .btn-primary {
      background: linear-gradient(90deg, #6366f1 0%, #3b82f6 100%);
      border: none;
    }
    .btn-primary:hover {
      background: linear-gradient(90deg, #3b82f6 0%, #6366f1 100%);
    }
    .btn-info {
      background: linear-gradient(90deg, #06b6d4 0%, #3b82f6 100%);
      border: none;
      color: #fff;
    }
    .btn-info:hover {
      background: linear-gradient(90deg, #3b82f6 0%, #06b6d4 100%);
      color: #fff;
    }
    .table thead {
      background: linear-gradient(90deg, #6366f1 0%, #06b6d4 100%);
      color: #fff;
    }
    .table-striped>tbody>tr:nth-of-type(odd)>* {
      background-color: #f1f5f9;
    }
    .section-title {
      color: #3b82f6;
      font-weight: 700;
      margin-bottom: 1rem;
      letter-spacing: 1px;
    }
    .input-group .form-control:focus {
      box-shadow: 0 0 0 0.2rem rgba(99,102,241,.25);
      border-color: #6366f1;
    }
    @media (max-width: 767px) {
      .card {
        margin-bottom: 1.5rem;
      }
      .table-responsive {
        font-size: 0.95rem;
      }
    }
  </style>
</head>
<body>
  <% if (user && user.role === 1) { %>
    <nav class="sidebar" style="min-height:100vh;background:linear-gradient(180deg,#6366f1 0%,#06b6d4 100%);color:#fff;padding:2rem 1rem;position:fixed;top:0;left:0;width:240px;z-index:100;box-shadow:2px 0 16px rgba(99,102,241,0.10);display:flex;flex-direction:column;gap:2rem;">
      <div class="sidebar-logo" style="font-size:1.5rem;font-weight:700;margin-bottom:2rem;text-align:center;letter-spacing:0.05em;">
        <img src="/images/logo.png" alt="Logo" style="height:40px;vertical-align:middle;"> <span>Admin</span>
      </div>
      <a href="/dashboard" class="nav-link" style="color:#fff;font-size:1.1rem;margin-bottom:1rem;border-radius:0.75rem;padding:0.7rem 1rem;display:flex;align-items:center;gap:0.7rem;"><i class="bi bi-speedometer2"></i> Tableau de bord</a>
      <a href="/books/manage" class="nav-link" style="color:#fff;font-size:1.1rem;margin-bottom:1rem;border-radius:0.75rem;padding:0.7rem 1rem;display:flex;align-items:center;gap:0.7rem;"><i class="bi bi-journal-text"></i> Gérer les livres</a>
      <a href="/admin/users" class="nav-link" style="color:#fff;font-size:1.1rem;margin-bottom:1rem;border-radius:0.75rem;padding:0.7rem 1rem;display:flex;align-items:center;gap:0.7rem;"><i class="bi bi-people"></i> Gérer les utilisateurs</a>
      <a href="/admin/orders" class="nav-link" style="color:#fff;font-size:1.1rem;margin-bottom:1rem;border-radius:0.75rem;padding:0.7rem 1rem;display:flex;align-items:center;gap:0.7rem;"><i class="bi bi-bag-check"></i> Gérer les commandes</a>
      <a href="/admin/emprunts" class="nav-link" style="color:#fff;font-size:1.1rem;margin-bottom:1rem;border-radius:0.75rem;padding:0.7rem 1rem;display:flex;align-items:center;gap:0.7rem;"><i class="bi bi-clock-history"></i> Gérer les emprunts</a>
      <a href="/admin/stock" class="nav-link" style="color:#fff;font-size:1.1rem;margin-bottom:1rem;border-radius:0.75rem;padding:0.7rem 1rem;display:flex;align-items:center;gap:0.7rem;"><i class="bi bi-box-seam"></i> Stock</a>
      <a href="/admin/reviews" class="nav-link"><i class="bi bi-chat-left-text"></i> Modération Avis <span id="pendingReviewsCount" class="badge bg-danger ms-1" style="display:none;">0</span></a>
      <a href="/logout" class="nav-link" style="color:#fff;font-size:1.1rem;margin-bottom:1rem;border-radius:0.75rem;padding:0.7rem 1rem;display:flex;align-items:center;gap:0.7rem;"><i class="bi bi-box-arrow-right"></i> Déconnexion</a>
    </nav>
    <div style="margin-left:260px;">
  <% } else { %>
    <div>
  <% } %>
  
  <% if (!user || user.role !== 1) { %>
    <script>
      window.location.href = '/dashboard';
    </script>
  <% } %>
  
  <div class="container py-5">
    <div class="row g-4">
      <!-- Add Book Form -->
      <div class="col-lg-5">
        <div class="card p-4 shadow-sm">
          <h3 class="section-title"><i class="bi bi-plus-circle me-2"></i>Ajouter un Nouveau Livre</h3>
          <form id="addBookForm" autocomplete="off">
            <input type="hidden" name="userId" value="<%= user._id %>">
            <div class="mb-3">
              <label for="title" class="form-label">Titre</label>
              <input type="text" class="form-control" id="title" name="title" required placeholder="Ex: Le Petit Prince">
            </div>
            <div class="mb-3">
              <label for="author" class="form-label">Auteur</label>
              <input type="text" class="form-control" id="author" name="author" required placeholder="Ex: Antoine de Saint-Exupéry">
            </div>
            <div class="mb-3">
              <label for="genre" class="form-label">Genre</label>
              <select class="form-control" id="genre" name="genre" required>
                <option value="">-- Choisir un genre --</option>
                <option value="Roman">Roman</option>
                <option value="Science-fiction">Science-fiction</option>
                <option value="Fantastique">Fantastique</option>
                <option value="Policier">Policier</option>
                <option value="Biographie">Biographie</option>
                <option value="Histoire">Histoire</option>
                <option value="Jeunesse">Jeunesse</option>
                <option value="Poésie">Poésie</option>
                <option value="Essai">Essai</option>
                <option value="Autre">Autre</option>
                <option value="Aventure">Aventure</option>
                <option value="Drame">Drame</option>
                <option value="Humour">Humour</option>
                <option value="Classique">Classique</option>
                <option value="Théâtre">Théâtre</option>
                <option value="Philosophie">Philosophie</option>
                <option value="Psychologie">Psychologie</option>
                <option value="Religion">Religion</option>
                <option value="Sociologie">Sociologie</option>
                <option value="Cuisine">Cuisine</option>
                <option value="Voyage">Voyage</option>
                <option value="Art">Art</option>
                <option value="Musique">Musique</option>
                <option value="Informatique">Informatique</option>
                <option value="Manga">Manga</option>
                <option value="BD">Bande dessinée</option>
                <option value="Santé">Santé</option>
                <option value="Sport">Sport</option>
                <option value="Nature">Nature</option>
                <option value="Animaux">Animaux</option>
                <option value="Économie">Économie</option>
                <option value="Politique">Politique</option>
                <option value="Sciences">Sciences</option>
                <option value="Technologie">Technologie</option>
                <option value="Éducation">Éducation</option>
                <option value="Entreprise">Entreprise</option>
                <option value="Dictionnaire">Dictionnaire</option>
                <option value="Guide">Guide</option>
                <option value="Loisirs">Loisirs</option>
                <option value="Spiritualité">Spiritualité</option>
                <option value="Érotique">Érotique</option>
                <option value="LGBTQ+">LGBTQ+</option>
                <option value="Féminisme">Féminisme</option>
                <option value="Guerre">Guerre</option>
                <option value="Médical">Médical</option>
                <option value="Paranormal">Paranormal</option>
                <option value="Western">Western</option>
                <option value="Chick-lit">Chick-lit</option>
                <option value="Young Adult">Young Adult</option>
                <option value="New Adult">New Adult</option>
                <option value="Roman graphique">Roman graphique</option>
                <option value="Littérature étrangère">Littérature étrangère</option>
                <option value="Littérature française">Littérature française</option>
              </select>
            </div>
            <div class="mb-3">
              <label for="price" class="form-label">Prix (€)</label>
              <input type="number" class="form-control" id="price" name="price" step="0.01" required placeholder="Ex: 12.99">
            </div>
            <div class="mb-3">
              <label for="description" class="form-label">Description</label>
              <textarea class="form-control" id="description" name="description" rows="2" placeholder="Brève description..."></textarea>
            </div>
            <div class="mb-3">
              <label for="stock" class="form-label">Stock</label>
              <input type="number" class="form-control" id="stock" name="stock" min="0" value="0">
            </div>
            <div class="mb-3">
              <label for="image" class="form-label">Image de couverture</label>
              <div id="dropZone" style="border:2px dashed #6366f1;border-radius:0.5rem;padding:1.5rem;text-align:center;cursor:pointer;background:#f8fafc;transition:background 0.2s;">
                <span id="dropZoneText"><i class="bi bi-cloud-arrow-up fs-3"></i><br>Glissez-déposez une image ici ou cliquez pour sélectionner</span>
                <input type="file" class="form-control" id="image" name="image" accept="image/*" style="display:none;">
                <div class="mt-2">
                  <img id="imagePreview" src="/images/books/default-cover.png" alt="Aperçu" style="max-width:100px;max-height:130px;border-radius:0.3rem;box-shadow:0 2px 8px #0001;display:block;margin:auto;">
                </div>
              </div>
            </div>
            <button type="submit" class="btn btn-primary w-100"><i class="bi bi-plus-lg me-1"></i>Ajouter le Livre</button>
          </form>
        </div>
      </div>
      <!-- Book List & Search -->
      <div class="col-lg-7">
        <div class="card p-4 shadow-sm mb-4">
          <h3 class="section-title"><i class="bi bi-search me-2"></i>Rechercher des Livres</h3>
          <form id="searchBooksForm" class="mb-0">
            <div class="input-group">
              <input type="text" class="form-control" id="searchQuery" placeholder="Titre, auteur ou genre...">
              <button type="submit" class="btn btn-primary"><i class="bi bi-search"></i> Rechercher</button>
            </div>
          </form>
        </div>
        <div class="card p-4 shadow-sm">
          <h3 class="section-title"><i class="bi bi-book-half me-2"></i>Liste des Livres</h3>
          <div class="table-responsive">
            <table class="table table-striped align-middle table-hover">
              <thead>
                <tr>
                  <th scope="col"><i class="bi bi-book"></i> Titre</th>
                  <th scope="col"><i class="bi bi-person"></i> Auteur</th>
                  <th scope="col"><i class="bi bi-tags"></i> Genre</th>
                  <th scope="col"><i class="bi bi-currency-euro"></i> Prix</th>
                  <th scope="col"><i class="bi bi-box"></i> Stock</th>
                  <th scope="col"><i class="bi bi-image"></i> Couverture</th>
                  <th scope="col"><i class="bi bi-gear"></i> Actions</th>
                </tr>
              </thead>
              <tbody id="booksTableBody">
                <!-- Les livres seront injectés dynamiquement par JS -->
              </tbody>
            </table>
            <div id="noBooksMsg" class="alert alert-info mt-3" style="display:none;">Aucun livre trouvé.</div>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Edit Book Modal -->
<div class="modal fade" id="editBookModal" tabindex="-1" aria-labelledby="editBookModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg modal-dialog-centered">
    <div class="modal-content border-0 shadow-lg rounded-4 overflow-hidden">
      <form id="editBookForm" autocomplete="off">
        <div class="modal-header bg-gradient" style="background:linear-gradient(90deg,#6366f1 0%,#06b6d4 100%);color:#fff;">
          <h5 class="modal-title fw-bold" id="editBookModalLabel"><i class="bi bi-pencil-square me-2"></i>Modifier le Livre</h5>
          <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body p-4">
          <input type="hidden" id="editBookId" name="bookId">
          <div class="row g-4">
            <div class="col-md-6">
              <div class="mb-3">
                <label for="editTitle" class="form-label">Titre</label>
                <input type="text" class="form-control" id="editTitle" name="title" required>
              </div>
              <div class="mb-3">
                <label for="editAuthor" class="form-label">Auteur</label>
                <input type="text" class="form-control" id="editAuthor" name="author" required>
              </div>
              <div class="mb-3">
                <label for="editGenre" class="form-label">Genre</label>
                <input type="text" class="form-control" id="editGenre" name="genre" required>
              </div>
              <div class="mb-3">
                <label for="editPrice" class="form-label">Prix (€)</label>
                <input type="number" class="form-control" id="editPrice" name="price" step="0.01" required>
              </div>
              <div class="mb-3">
                <label for="editStock" class="form-label">Stock</label>
                <input type="number" class="form-control" id="editStock" name="stock" min="0">
              </div>
            </div>
            <div class="col-md-6">
              <div class="mb-3">
                <label for="editDescription" class="form-label">Description</label>
                <textarea class="form-control" id="editDescription" name="description" rows="5"></textarea>
              </div>
              <div class="mb-3">
                <label for="editImage" class="form-label">Image de couverture</label>
                <div id="editDropZone" style="border:2px dashed #6366f1;border-radius:0.5rem;padding:1.5rem;text-align:center;cursor:pointer;background:#f8fafc;transition:background 0.2s;">
                  <span id="editDropZoneText"><i class="bi bi-cloud-arrow-up fs-3"></i><br>Glissez-déposez une image ici ou cliquez pour sélectionner</span>
                  <input type="file" class="form-control" id="editImage" name="image" accept="image/*" style="display:none;">
                  <div class="mt-2">
                    <img id="editImagePreview" src="/images/books/default-cover.png" alt="Aperçu" style="max-width:120px;max-height:160px;border-radius:0.3rem;box-shadow:0 2px 8px #0001;display:block;margin:auto;">
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="modal-footer bg-light border-0 d-flex justify-content-between align-items-center">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
          <button type="submit" class="btn btn-gradient fw-bold px-4" style="background:linear-gradient(90deg,#06b6d4 0%,#6366f1 100%);color:#fff;">Enregistrer <i class="bi bi-check-circle ms-1"></i></button>
        </div>
      </form>
    </div>
  </div>
</div>
<style>
  .btn-gradient {
    background: linear-gradient(90deg,#06b6d4 0%,#6366f1 100%);
    color: #fff;
    border: none;
  }
  .btn-gradient:hover {
    background: linear-gradient(90deg,#6366f1 0%,#06b6d4 100%);
    color: #fff;
  }
</style>
  <footer class="bg-white border-top py-4 mt-5">
    <div class="container text-center">
      <%- include('../partials/footer') %>
    </div>
  </footer>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="/js/client.js"></script>
  <script>
    // Helper to get the correct image URL for a book
    function getBookImageUrl(image) {
      if (!image || image.trim() === '') {
        return '/images/books/default-cover.png';
      }
      if (image.startsWith('/') || image.startsWith('http')) {
        return image;
      }
      return '/images/books/' + image;
    }

    // Rendu dynamique des livres (avec image)
    function renderBooks(books) {
      const tbody = document.getElementById('booksTableBody');
      const noBooksMsg = document.getElementById('noBooksMsg');
      tbody.innerHTML = '';
      if (!books || books.length === 0) {
        if (noBooksMsg) noBooksMsg.style.display = 'block';
        return;
      } else {
        if (noBooksMsg) noBooksMsg.style.display = 'none';
      }
      books.forEach(book => {
        const imageUrl = getBookImageUrl(book.image);
        tbody.insertAdjacentHTML('beforeend', `
          <tr data-book-id="${book._id}">
            <td>${book.title}</td>
            <td>${book.author}</td>
            <td><span class="badge bg-info bg-gradient text-dark">${book.genre}</span></td>
            <td><span class="fw-bold text-success">${book.price}</span></td>
            <td>${book.stock > 5 ? `<span class='badge bg-success'>${book.stock}</span>` : book.stock > 0 ? `<span class='badge bg-warning text-dark'>${book.stock}</span>` : `<span class='badge bg-danger'>Rupture</span>`}</td>
            <td><img src="${imageUrl}" alt="Couverture" style="width:48px;height:64px;object-fit:cover;border-radius:0.3rem;box-shadow:0 2px 8px #0001;" onerror="this.onerror=null;this.src='/images/books/default-cover.png';"></td>
            <td>
              <button type="button" class="btn btn-sm btn-primary me-1 edit-book-btn" data-id="${book._id}" title="Modifier">
                <i class="bi bi-pencil-square"></i>
              </button>
              <button onclick="deleteBook('${book._id}')" class="btn btn-sm btn-danger me-1" title="Supprimer">
                <i class="bi bi-trash"></i>
              </button>
              
            </td>
          </tr>
        `);
      });
      // Attach event listeners for edit buttons after rendering
      setTimeout(() => {
        document.querySelectorAll('.edit-book-btn').forEach(btn => {
          btn.onclick = function() {
            editBook(this.getAttribute('data-id'));
          };
        });
      }, 0);
    }

    // Charger tous les livres au chargement de la page
    async function loadAllBooks() {
      const res = await fetch('/api/books');
      const books = await res.json();
      renderBooks(books);
    }
    document.addEventListener('DOMContentLoaded', loadAllBooks);

    // Recherche dynamique
    document.getElementById('searchBooksForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      const query = document.getElementById('searchQuery').value;
      const res = await fetch(`/api/books/search?query=${encodeURIComponent(query)}`);
      const books = await res.json();
      renderBooks(books);
    });

    // Drag-and-drop UI for book cover upload
    document.addEventListener('DOMContentLoaded', function() {
      const dropZone = document.getElementById('dropZone');
      const fileInput = document.getElementById('image');
      const preview = document.getElementById('imagePreview');
      const dropZoneText = document.getElementById('dropZoneText');
      if (dropZone && fileInput) {
        dropZone.addEventListener('click', () => fileInput.click());
        dropZone.addEventListener('dragover', e => {
          e.preventDefault();
          dropZone.style.background = '#e0e7ff';
        });
        dropZone.addEventListener('dragleave', e => {
          e.preventDefault();
          dropZone.style.background = '#f8fafc';
        });
        dropZone.addEventListener('drop', e => {
          e.preventDefault();
          dropZone.style.background = '#f8fafc';
          if (e.dataTransfer.files && e.dataTransfer.files[0]) {
            fileInput.files = e.dataTransfer.files;
            fileInput.dispatchEvent(new Event('change'));
          }
        });
        fileInput.addEventListener('change', function(e) {
          const file = this.files[0];
          if (file && preview) {
            const reader = new FileReader();
            reader.onload = function(evt) {
              preview.src = evt.target.result;
            };
            reader.readAsDataURL(file);
            dropZoneText.innerHTML = file.name;
          } else if (preview) {
            preview.src = '/images/books/default-cover.png';
            dropZoneText.innerHTML = '<i class="bi bi-cloud-arrow-up fs-3"></i><br>Glissez-déposez une image ici ou cliquez pour sélectionner';
          }
        });
      }
    });

    // AJAX upload logic for book cover
    async function uploadBookCover(file) {
      const formData = new FormData();
      formData.append('image', file);
      const res = await fetch('/api/books/upload-cover', {
        method: 'POST',
        body: formData
      });
      if (!res.ok) throw new Error('Erreur lors de l\'upload de la couverture');
      const data = await res.json();
      return data.imageUrl; // relative path to use in book model
    }

    // Handle add book form submission with cover upload
    document.addEventListener('DOMContentLoaded', function() {
      const addBookForm = document.getElementById('addBookForm');
      if (addBookForm) {
        addBookForm.addEventListener('submit', async function(e) {
          e.preventDefault();
          const form = e.target;
          const formData = new FormData(form);
          const fileInput = document.getElementById('image');
          let imageUrl = '';
          if (fileInput && fileInput.files && fileInput.files[0]) {
            try {
              imageUrl = await uploadBookCover(fileInput.files[0]);
            } catch (err) {
              alert(err.message);
              return;
            }
          }
          // Add imageUrl to formData for backend
          formData.set('image', imageUrl);
          // Send the rest of the book data (except file) to your backend
          const res = await fetch('/api/books', {
            method: 'POST',
            body: formData
          });
          const data = await res.json();
          if (res.ok) {
            alert('Livre ajouté avec succès');
            window.location.reload();
          } else {
            alert(data.message || 'Erreur lors de l\'ajout du livre');
          }
        });
      }
    });
    // Edit Book Modal logic
let currentEditImageUrl = '';
function editBook(id) {
  fetch(`/api/books/${encodeURIComponent(id)}`)
    .then(res => res.json())
    .then(book => {
      document.getElementById('editBookId').value = book._id;
      document.getElementById('editTitle').value = book.title;
      document.getElementById('editAuthor').value = book.author;
      document.getElementById('editGenre').value = book.genre;
      document.getElementById('editPrice').value = book.price;
      document.getElementById('editDescription').value = book.description || '';
      document.getElementById('editStock').value = book.stock;
      currentEditImageUrl = book.image || '';
      document.getElementById('editImagePreview').src = getBookImageUrl(currentEditImageUrl);
      document.getElementById('editDropZoneText').innerHTML = '<i class="bi bi-cloud-arrow-up fs-3"></i><br>Glissez-déposez une image ici ou cliquez pour sélectionner';
      document.getElementById('editImage').value = '';
      const modal = new bootstrap.Modal(document.getElementById('editBookModal'));
      modal.show();
    });
}
// Drag-and-drop for edit modal
(function() {
  const dropZone = document.getElementById('editDropZone');
  const fileInput = document.getElementById('editImage');
  const preview = document.getElementById('editImagePreview');
  const dropZoneText = document.getElementById('editDropZoneText');
  if (dropZone && fileInput) {
    dropZone.addEventListener('click', () => fileInput.click());
    dropZone.addEventListener('dragover', e => {
      e.preventDefault();
      dropZone.style.background = '#e0e7ff';
    });
    dropZone.addEventListener('dragleave', e => {
      e.preventDefault();
      dropZone.style.background = '#f8fafc';
    });
    dropZone.addEventListener('drop', e => {
      e.preventDefault();
      dropZone.style.background = '#f8fafc';
      if (e.dataTransfer.files && e.dataTransfer.files[0]) {
        fileInput.files = e.dataTransfer.files;
        fileInput.dispatchEvent(new Event('change'));
      }
    });
    fileInput.addEventListener('change', function(e) {
      const file = this.files[0];
      if (file && preview) {
        const reader = new FileReader();
        reader.onload = function(evt) {
          preview.src = evt.target.result;
        };
        reader.readAsDataURL(file);
        dropZoneText.innerHTML = file.name;
      } else if (preview) {
        preview.src = getBookImageUrl(currentEditImageUrl);
        dropZoneText.innerHTML = '<i class="bi bi-cloud-arrow-up fs-3"></i><br>Glissez-déposez une image ici ou cliquez pour sélectionner';
      }
    });
  }
})();
// Handle edit book form submission
const editBookForm = document.getElementById('editBookForm');
if (editBookForm) {
  editBookForm.addEventListener('submit', async function(e) {
    e.preventDefault();
    const form = e.target;
    const bookId = document.getElementById('editBookId').value;
    const formData = new FormData(form);
    let imageUrl = currentEditImageUrl;
    const fileInput = document.getElementById('editImage');
    if (fileInput && fileInput.files && fileInput.files[0]) {
      try {
        imageUrl = await uploadBookCover(fileInput.files[0]);
      } catch (err) {
        alert(err.message);
        return;
      }
    }
    formData.set('image', imageUrl);
    // Send update to backend
    const res = await fetch(`/api/books/${bookId}`, {
      method: 'PUT',
      body: formData
    });
    const data = await res.json();
    if (res.ok) {
      alert('Livre modifié avec succès');
      window.location.reload();
    } else {
      alert(data.message || 'Erreur lors de la modification du livre');
    }
  });
}
  </script>
</body>
</html>